version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: dwp-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: dwp
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - dwp-network

  # Qdrant向量数据库
  qdrant:
    image: qdrant/qdrant
    container_name: dwp-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - dwp-network

  # Java后端服务
  java-backend:
    build:
      context: .
      dockerfile: Dockerfile.java
    container_name: dwp-java-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/dwp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=utf8
      PYTHON_RAG_SERVICE_URL: http://python-rag:8002
    depends_on:
      - mysql
    networks:
      - dwp-network

  # Python RAG服务
  python-rag:
    build:
      context: ./python-rag-service
      dockerfile: Dockerfile
    container_name: dwp-python-rag
    ports:
      - "8002:8002"
    environment:
      JAVA_BACKEND_URL: http://java-backend:8080
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
    depends_on:
      - qdrant
      - java-backend
    networks:
      - dwp-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: dwp-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - java-backend
      - python-rag
    networks:
      - dwp-network

volumes:
  mysql_data:
  qdrant_data:

networks:
  dwp-network:
    driver: bridge 